git switch main 또는 branch 만들어놓은것 이름
git add . 또는 특정파일이름 . <= 이건 모든파일 커밋할준비

git commit -m '커밋내용'

git log --oneline --all 이건 깃 로그보기 ,  뒤에 graph 붙이면 그래프형식으로 볼수있음

git branch 브렌치할제목

마켓플레이스 git Graph를 깔면 커밋한내용 빠진거 더한거 내용 편하게볼수있음

git branch -d 브렌치지울제목

git branch -D  머지 아직안한 브렌치지울제목

git merge --squash 이건 머지해주는거랑 똑같은데 메인브렌치커밋만 남도록 해줌

git restore 파일이름 <= 이건 app.js라는 파일을 마지막 커밋상태로 복구하는작업

git restore --source 커밋아이디 파일이름 <= 같은거지만 어느시점의 커밋상태로 돌아가는방법

git revert 커밋아이디 <= 커밋했던거 삭제 , (삭제한내용을 새로 커밋) 

git reset --hard 커밋아이디 = 커밋아이디 입력했던시점으로 되돌리기

git push -u https://github.com/Minhyunggi/git-github.git main <= 깃허브 브랜치에다가 올리는작업 주소는
깃허브 래퍼지스토어에서 만들고 거기주소 붙여넣기 , 끝에는항상 .git으로 끝나야하며 그 뒤에는 브랜치이름 , 처음에는 main
여기서 -u를하고 주소입력하고 했으면 그 주소는 기억되고있는거라서 git push만해도 푸쉬가능

git remote add 변수명 https://github.com/Minhyunggi/git-github.git <= 이런식으로하면 주소 길게적을필요없이
깃도 변수지정가능

git clone https://github.com/Minhyunggi/git-github.git 협업할때는 클론으로 소스코드받아오면됨 , 깃헙
홈페이지가서 콜라보레이터 들어가서 협업 등록해야함 그래야 푸쉬가능

git push를 다른 팀원이 먼저한 상황에서 내가 푸쉬하려고하면 에러가나옴 , git pull을 먼저하고나서 push해야함(깃헙 최신내용이 로컬저장소에 있어야 푸쉬가능)

git push https://github.com/Minhyunggi/git-github.git 브랜치이름 = 이런식으로하면 브랜치이름으로된것만 올라감

협업을할때 머지를하려면 깃헙 홈페이지에서 pull requests를 하면됨